--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=10 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 15.0 cbx_cycloneii 2015:04:15:19:11:39:SJ cbx_lpm_add_sub 2015:04:15:19:11:39:SJ cbx_lpm_compare 2015:04:15:19:11:39:SJ cbx_lpm_decode 2015:04:15:19:11:39:SJ cbx_mgl 2015:04:15:20:18:26:SJ cbx_stratix 2015:04:15:19:11:39:SJ cbx_stratixii 2015:04:15:19:11:39:SJ  VERSION_END


-- Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_5ua
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[9..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[9..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode2623w[1..0]	: WIRE;
	w_anode2632w[3..0]	: WIRE;
	w_anode2649w[3..0]	: WIRE;
	w_anode2659w[3..0]	: WIRE;
	w_anode2669w[3..0]	: WIRE;
	w_anode2679w[3..0]	: WIRE;
	w_anode2689w[3..0]	: WIRE;
	w_anode2699w[3..0]	: WIRE;
	w_anode2709w[3..0]	: WIRE;
	w_anode2721w[1..0]	: WIRE;
	w_anode2728w[3..0]	: WIRE;
	w_anode2739w[3..0]	: WIRE;
	w_anode2749w[3..0]	: WIRE;
	w_anode2759w[3..0]	: WIRE;
	w_anode2769w[3..0]	: WIRE;
	w_anode2779w[3..0]	: WIRE;
	w_anode2789w[3..0]	: WIRE;
	w_anode2799w[3..0]	: WIRE;
	w_data2621w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[9..0] = eq_wire[9..0];
	eq_wire[] = ( ( w_anode2799w[3..3], w_anode2789w[3..3], w_anode2779w[3..3], w_anode2769w[3..3], w_anode2759w[3..3], w_anode2749w[3..3], w_anode2739w[3..3], w_anode2728w[3..3]), ( w_anode2709w[3..3], w_anode2699w[3..3], w_anode2689w[3..3], w_anode2679w[3..3], w_anode2669w[3..3], w_anode2659w[3..3], w_anode2649w[3..3], w_anode2632w[3..3]));
	w_anode2623w[] = ( (w_anode2623w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode2632w[] = ( (w_anode2632w[2..2] & (! w_data2621w[2..2])), (w_anode2632w[1..1] & (! w_data2621w[1..1])), (w_anode2632w[0..0] & (! w_data2621w[0..0])), w_anode2623w[1..1]);
	w_anode2649w[] = ( (w_anode2649w[2..2] & (! w_data2621w[2..2])), (w_anode2649w[1..1] & (! w_data2621w[1..1])), (w_anode2649w[0..0] & w_data2621w[0..0]), w_anode2623w[1..1]);
	w_anode2659w[] = ( (w_anode2659w[2..2] & (! w_data2621w[2..2])), (w_anode2659w[1..1] & w_data2621w[1..1]), (w_anode2659w[0..0] & (! w_data2621w[0..0])), w_anode2623w[1..1]);
	w_anode2669w[] = ( (w_anode2669w[2..2] & (! w_data2621w[2..2])), (w_anode2669w[1..1] & w_data2621w[1..1]), (w_anode2669w[0..0] & w_data2621w[0..0]), w_anode2623w[1..1]);
	w_anode2679w[] = ( (w_anode2679w[2..2] & w_data2621w[2..2]), (w_anode2679w[1..1] & (! w_data2621w[1..1])), (w_anode2679w[0..0] & (! w_data2621w[0..0])), w_anode2623w[1..1]);
	w_anode2689w[] = ( (w_anode2689w[2..2] & w_data2621w[2..2]), (w_anode2689w[1..1] & (! w_data2621w[1..1])), (w_anode2689w[0..0] & w_data2621w[0..0]), w_anode2623w[1..1]);
	w_anode2699w[] = ( (w_anode2699w[2..2] & w_data2621w[2..2]), (w_anode2699w[1..1] & w_data2621w[1..1]), (w_anode2699w[0..0] & (! w_data2621w[0..0])), w_anode2623w[1..1]);
	w_anode2709w[] = ( (w_anode2709w[2..2] & w_data2621w[2..2]), (w_anode2709w[1..1] & w_data2621w[1..1]), (w_anode2709w[0..0] & w_data2621w[0..0]), w_anode2623w[1..1]);
	w_anode2721w[] = ( (w_anode2721w[0..0] & data_wire[3..3]), enable_wire);
	w_anode2728w[] = ( (w_anode2728w[2..2] & (! w_data2621w[2..2])), (w_anode2728w[1..1] & (! w_data2621w[1..1])), (w_anode2728w[0..0] & (! w_data2621w[0..0])), w_anode2721w[1..1]);
	w_anode2739w[] = ( (w_anode2739w[2..2] & (! w_data2621w[2..2])), (w_anode2739w[1..1] & (! w_data2621w[1..1])), (w_anode2739w[0..0] & w_data2621w[0..0]), w_anode2721w[1..1]);
	w_anode2749w[] = ( (w_anode2749w[2..2] & (! w_data2621w[2..2])), (w_anode2749w[1..1] & w_data2621w[1..1]), (w_anode2749w[0..0] & (! w_data2621w[0..0])), w_anode2721w[1..1]);
	w_anode2759w[] = ( (w_anode2759w[2..2] & (! w_data2621w[2..2])), (w_anode2759w[1..1] & w_data2621w[1..1]), (w_anode2759w[0..0] & w_data2621w[0..0]), w_anode2721w[1..1]);
	w_anode2769w[] = ( (w_anode2769w[2..2] & w_data2621w[2..2]), (w_anode2769w[1..1] & (! w_data2621w[1..1])), (w_anode2769w[0..0] & (! w_data2621w[0..0])), w_anode2721w[1..1]);
	w_anode2779w[] = ( (w_anode2779w[2..2] & w_data2621w[2..2]), (w_anode2779w[1..1] & (! w_data2621w[1..1])), (w_anode2779w[0..0] & w_data2621w[0..0]), w_anode2721w[1..1]);
	w_anode2789w[] = ( (w_anode2789w[2..2] & w_data2621w[2..2]), (w_anode2789w[1..1] & w_data2621w[1..1]), (w_anode2789w[0..0] & (! w_data2621w[0..0])), w_anode2721w[1..1]);
	w_anode2799w[] = ( (w_anode2799w[2..2] & w_data2621w[2..2]), (w_anode2799w[1..1] & w_data2621w[1..1]), (w_anode2799w[0..0] & w_data2621w[0..0]), w_anode2721w[1..1]);
	w_data2621w[2..0] = data_wire[2..0];
END;
--VALID FILE
